//------------Sonic CD BossArm Script-------------//
//--------Scripted by Christian Whitehead 'The Taxman'--------//
//-------Unpacked By Rubberduckycooly's Script Unpacker-------//

// Aliases
#alias Object.Value0	:	Object.ArmJointEntity
#alias Object.Value2	:	Object.XOffSet
#alias Object.Value3	:	Object.Timer
#alias Object.Value4	:	Object.Charging
#alias Object.Value5	:	Object.YOffSet
#alias Object.Value6	:	Object.XVelocity
#alias Object.Value7	:	Object.YVelocity

// States
#alias 0				:	BOSSARM_SETUP
#alias 1				:	BOSSARM_IDLE
#alias 2				:	BOSSARM_DESTROYED
#alias 3				:	BOSSARM_MOVE_TO_FRONT
#alias 4				:	BOSSARM_MOVE_TO_BACK
#alias 5				:	BOSSARM_START_CHARGE

// Arm Joint Aliases
#alias Object.Xpos		:	ArmJoint.XPos
#alias Object.YPos		:	ArmJoint.YPos

// Priority
#alias 0				:	PRIORITY_ACTIVE_BOUNDS

// Function declarations
#function BossArm_HandleArmMovement

function BossArm_HandleArmMovement
	ArrayPos0 = Object.ArmJointEntity

	Object.XPos = ArmJoint[ArrayPos0].XPos
	Object.XPos -= 2359296				// 0x240000
	Object.XPos += Object.XVelocity

	Object.YPos = ArmJoint[ArrayPos0].YPos
	TempValue1 = true
	GetBit(TempValue0, Object.Charging, 7)	// Check if the HVC is charging agaisnt you
	
	if TempValue0 == false	// if not, adjust the arms height to defend from the player
		if Player.YPos < Object.YPos
			if Object.YVelocity > -524288	// -0x80000
				Object.YVelocity -= 65536	// 0x10000
			end if
			TempValue1 = 0
		end if
	end if

	if TempValue1 == true	// if it's charging, then the arms height is set in stone
		if Object.YVelocity < 524288		// 0x80000
			Object.YVelocity += 65536		// 0x10000
		end if
	end if
	Object.YPos += Object.YVelocity
end function


sub ObjectMain
	switch Object.State
	case BOSSARM_SETUP
		Object.State = BOSSARM_IDLE
		CallFunction(BossArm_HandleArmMovement)
		break

	case BOSSARM_IDLE
		CallFunction(BossArm_HandleArmMovement)
		break

	case BOSSARM_DESTROYED
		Object.XOffSet -= 1568
		Object.XPos += Object.XOffSet

		Object.YOffSet += 4640
		Object.YPos += Object.YOffSet

		Object.Timer++
		if Object.Timer == 7
			Object.Timer = 0
			CreateTempObject(TypeName[Explosion], 0, Object.XPos, Object.YPos)
			PlaySfx(22, 0)
		end if

		if Object.OutOfBounds == true
			Object.Type = TypeName[Blank Object]
			Object.Priority = PRIORITY_ACTIVE_BOUNDS
		end if
		break

	case BOSSARM_MOVE_TO_FRONT
		if Object.XVelocity > 0
			Object.XVelocity -= 32768	// 0x8000
		end if
		CallFunction(BossArm_HandleArmMovement)
		break

	case BOSSARM_MOVE_TO_BACK
		if Object.XVelocity < 1048576	// 0x100000
			Object.XVelocity += 32768	// 0x8000
		end if
		CallFunction(BossArm_HandleArmMovement)
		break

	case BOSSARM_START_CHARGE
		if Object.XVelocity < 524288	// 0x80000
			Object.XVelocity += 32768	// 0x8000
		else
			Object.Frame = 1	// Unused Frame yay!!!
		end if
		
		ArrayPos0 = Object.ArmJointEntity
		
		Object.XPos = ArmJoint[ArrayPos0].XPos
		Object.XPos -= 2359296		// 0x240000
		Object.XPos += Object.XVelocity

		if Object.YVelocity < 524288	// 0x80000
			Object.YVelocity += 65536	// 0x10000
		end if
		Object.YPos = ArmJoint[ArrayPos0].YPos
		Object.YPos += Object.YVelocity
		break
	end switch
end sub


sub ObjectDraw
	DrawSprite(3)
	DrawSprite(0)	// This should be Object.Frame but ok
end sub


sub ObjectStartup
	LoadSpriteSheet("R1/Objects3.gif")
	SpriteFrame(-15, -8, 32, 16, 141, 34)	// #0 - Arm Extend
	SpriteFrame(-6, -8, 24, 16, 174, 34)	// #1 - Arm Retract Frame 0	(Unused by code mistake)
	SpriteFrame(2, -8, 16, 16, 124, 51)		// #2 - Arm Retract Frame 1	(Unused)
	SpriteFrame(9, -8, 24, 16, 141, 51)		// #3 - Arm Elbow
end sub

// ========================
// Editor Subs
// ========================

sub RSDKDraw
	DrawSprite(3)
	DrawSprite(0)	// This should be Object.Frame but ok
end sub

sub RSDKLoad
	LoadSpriteSheet("R1/Objects3.gif")
	SpriteFrame(-15, -8, 32, 16, 141, 34)	// #0 - Arm Extend
	SpriteFrame(-6, -8, 24, 16, 174, 34)	// #1 - Arm Retract Frame 0	(Unused by code mistake)
	SpriteFrame(2, -8, 16, 16, 124, 51)		// #2 - Arm Retract Frame 1	(Unused)
	SpriteFrame(9, -8, 24, 16, 141, 51)		// #3 - Arm Elbow

	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end sub
